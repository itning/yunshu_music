name: Flutter Package

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
  
env:
  FLUTTER_VERSION: "3.32.3"
  
jobs:
  build_mac_and_ios:
    runs-on: macos-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          #channel: 'stable'

      - name: Restore packages
        run: |
          cd yunshu_music
          flutter pub get

      - name: Build Mac&IOS App
        run: |
          cd yunshu_music
          flutter build ios --release --no-codesign
          flutter build macos --release
          
      - name: Zip_ios
        uses: thedoctor0/zip-release@master
        with:
         filename: 'ios.zip'
         path: 'yunshu_music/build/ios/iphoneos'

      - name: Zip_mac
        uses: thedoctor0/zip-release@master
        with:
         filename: 'mac_arm64.zip'
         path: 'yunshu_music/build/macos/Build/Products/Release'

      - name: Create Github ios Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "ios.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          allowUpdates: true

      - name: Create Github mac_arm64 Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "mac_arm64.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          allowUpdates: true
          
  build_web:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          #channel: 'stable'

      - name: Restore packages
        run: |
          cd yunshu_music
          flutter pub get

      - name: Build Web App
        run: |
          cd yunshu_music
          flutter build web --release
          
      - name: Zip
        uses: thedoctor0/zip-release@master
        with:
         filename: 'web.zip'
         path: 'yunshu_music/build/web'
         
      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "web.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          allowUpdates: true
         
  build_android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Setup Java to compile Android project
        uses: actions/setup-java@v1
        with:
          java-version: "17.x"

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          #channel: 'stable'
      - name: Create the Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
        run: |
          # import keystore from secrets
          cd yunshu_music
          ls -all
          echo $KEYSTORE_BASE64 | base64 -di > android/app/key.jks
          echo $KEY_PROPERTIES | base64 -di > android/key.properties

      - name: Restore packages
        run: |
          cd yunshu_music
          flutter pub get

      - name: Build Android App
        run: |
          cd yunshu_music
          flutter build apk --release --split-per-abi
      
      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "yunshu_music/build/app/outputs/apk/release/*.apk"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          allowUpdates: true
          
  build_windows:
    runs-on: windows-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          #channel: 'stable'

      - name: Restore packages
        run: |
          cd yunshu_music
          flutter pub get

      - name: CERT
        run: |
          cd yunshu_music
          $certBytes = [System.Convert]::FromBase64String("${{ secrets.CERT_PFX_BASE64 }}")
          $pfxPath = Join-Path $(Get-Location) "yunshu_cert.pfx"
          [System.IO.File]::WriteAllBytes($pfxPath, $certBytes)

      - name: Build Windows App
        run: |
          cd yunshu_music
          flutter build windows --release
          Compress-Archive -Path .\build\windows\x64\runner\Release\* -DestinationPath windows.zip
          dart run msix:create -c ./yunshu_cert.pfx -p ${{ secrets.CERT_PFX_PASSWORD }} --install-certificate false
          
      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "yunshu_music/windows.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          allowUpdates: true

      - name: Create Github Msix Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "yunshu_music/build/windows/x64/runner/Release/yunshu_music.msix"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          allowUpdates: true
